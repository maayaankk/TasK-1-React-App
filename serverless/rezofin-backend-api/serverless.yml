service: rezofin-backend-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-south-1
  stage: dev
  environment: 
    DYNAMO_USER_TABLE: ${self:custom.userTableName}
  iamRoleStatements:
    - Effect: Allow
      Action: 
          - dynamodb:DescribeTable
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
      Resource: '*'

plugins:
  - serverless-auto-swagger
  - serverless-iam-roles-per-function
  - serverless-webpack
  - serverless-offline

package: 
  individually: true

custom:
  userTableName: user-table-${self:provider.stage}

functions:
  getUser:
    handler: lambdas/userData.getUser
    name: user-data
    events:
      - http:
          path: /get-user
          method: GET
          # cors: 
          #   origin: '*'
          #   headers:
          #     - Authorization
          # type: COGNITO_USER_POOLS
          # authorizer:
          #   arn: arn:aws:cognito-idp:ap-south-1:061835027846:userpool/ap-south-1_Iiki8o7N6
          #   authorizerId:
          #     Ref: api-authorizer
  createUser:
    handler: lambdas/userData.createUser
    name: create-user-data
    events:
      - http:
          path: /create-user-data
          method: POST
  getUserById:
    handler: lambdas/userData.getUserById
    name: get-user-data-byId
    events:
      - http:
          path: /get-user-data-byId/{ID}
          method: GET
  updateUserById:
    handler: lambdas/userData.updateUserById
    name: update-user-byId
    events:
      - http:
          path: /update-user-data-byId/{ID}
          method: PUT
  deleteUserById:
    handler: lambdas/userData.deleteUserById
    name: delete-user-data-byId
    events:
      - http: 
          path: /delete-user-data-byId/{ID}
          method: DELETE

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
      
    # CognitoUserPool:
    #   Type: AWS::Cognito::UserPool
    #   Properties:
    #     UserPoolName: app93ff0569_userpool_93ff0569-dev
    #     UsernameAttributes:
    #       - email
    #     AutoVerifiedAttributes:
    #       - email
    # CognitoUserPoolClient:
    #   Type: AWS::Cognito::UserPoolClient
    #   Properties:
    #     ClientName: rezofin-app-client
    #     UserPoolId: 
    #       Ref: CognitoUserPool
    #     ExplicitAuthFlows:
    #       - ADMIN_NO_SRP_AUTH
